<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on rostrum.blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on rostrum.blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 11 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How long does it take to write a blog</title>
      <link>/2019/04/11/blog-writing/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/11/blog-writing/</guid>
      <description>library(tidyRSS) library(dplyr) library(stringr) library(ggplot2) library(rvest) library(lubridate) library(plotly) html &amp;lt;- read_html(&amp;quot;https://rostrum.blog/&amp;quot;) title &amp;lt;- html %&amp;gt;% html_nodes(&amp;quot;.archive-item-link&amp;quot;) %&amp;gt;% html_text() date &amp;lt;- html %&amp;gt;% html_nodes(&amp;quot;.archive-item-date&amp;quot;) %&amp;gt;% html_text() %&amp;gt;% str_replace_all(&amp;quot;\n|[:space:]&amp;quot;, &amp;quot;&amp;quot;) posts &amp;lt;- tibble(title = title, date = date) p &amp;lt;- posts %&amp;gt;% mutate(date = ymd(date), count = 1) %&amp;gt;% ggplot(aes(x = date, y = count)) + geom_point() + theme_void() + theme( axis.title.y = element_blank(), axis.title.x = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.</description>
    </item>
    
    <item>
      <title>Fix leaky pipes in R</title>
      <link>/2019/04/07/fix-leaky-pipes/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/07/fix-leaky-pipes/</guid>
      <description>Matt Dray (@mattdray)
Data leaking from a pipe (via Giphy)
 TL;DR You can chain function calls in R with %&amp;gt;%. There’s a few ways to catch errors in these pipelines.
 C’est un pipe You know R’s %&amp;gt;% (pipe) operator by now. It lets you chain function calls. It was created for Stefan Milton Bache and Hadley Wickham’s {magrittr} package and popularised by the tidyverse. Par exemple:
# {dplyr} for data manipulation # it also re-exports the pipe from {magrittr} library(dplyr) # Get mean sepal width for two iris species iris_pipe &amp;lt;- iris %&amp;gt;% filter(Species %in% c(&amp;quot;setosa&amp;quot;, &amp;quot;versicolor&amp;quot;)) %&amp;gt;% group_by(Species) %&amp;gt;% summarise(`Mean width` = mean(Sepal.</description>
    </item>
    
    <item>
      <title>A tidyverse functions quiz with {learnr}</title>
      <link>/2019/03/18/tidyverse-quiz/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/18/tidyverse-quiz/</guid>
      <description>Matt Dray (@mattdray)
 TL;DR Can you match the tidyverse function to its package? I used {learnr} to make a ‘tidyquiz’ to test you.
A live version is available at https://mattdray.shinyapps.io/tidyquiz/
To run locally and get the very latest functions:
remotes::install_github(&amp;quot;matt-dray/tidyquiz&amp;quot;) to install {tidyquiz} (it’s a package!) library(tidyquiz) to load it learnr::run_tutorial(&amp;quot;tidy&amp;quot;, package = &amp;quot;tidyquiz&amp;quot;) to open in your browser   The problem I saw a (probably) tongue-in-cheek tweet recently from Ryan Timpe:</description>
    </item>
    
    <item>
      <title>Webscraping the {polite} way</title>
      <link>/2019/03/04/polite-webscrape/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/04/polite-webscrape/</guid>
      <description>Matt Dray (@mattdray)
Tea and polite webscraping: certified lovely
 Reaping with rvest Ah, salutations, and welcome to this blogpost about polite webscraping. Please do come in. I’ll take your coat. How are you? Would you like a cup of tea? Oh, I insist!
Speaking of tea, perhaps you’d care to join me in genial conversaton about it. Where to begin? Let’s draw inspiration from popular posts on the Tea subreddit of Reddit.</description>
    </item>
    
    <item>
      <title>What’s your Hadley Number?</title>
      <link>/2019/02/27/hadley-number/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/27/hadley-number/</guid>
      <description>Matt Dray (@mattdray)
A Bacon Number of zero and a Bacon Number of one (via Giphy)
 TL;DR I made a Shiny app to demonstrate the Six Degrees of Kevin Bacon. Except it’s for CRAN authors. And Hadley Wickham is Kevin Bacon.
To help do this, I made the little package {kevinbacran}1 to find the network separation between any two authors on CRAN.
 Six degrees People are connected to each other in networks.</description>
    </item>
    
    <item>
      <title>Graphing the Relayverse of podcasts</title>
      <link>/2019/02/14/relayverse/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/14/relayverse/</guid>
      <description>Matt Dray (@mattdray)
The Relay FM podcast network, visualised. Scroll to the bottom of this post to try it yourself.
 Podcast networks Podcasting is becoming big business. Music-streaming giant Spotify just acquired the podcast network Gimlet for a reported $200 million.
Other networks include The Incomparable, 5by5 and Radiotopia. Such networks can boost revenue and listener numbers and provide access to expertise, management and resources.
Relay FM is a network that focuses largely on tech content1.</description>
    </item>
    
    <item>
      <title>Git going: the command line</title>
      <link>/2019/02/01/git-going-cl/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/01/git-going-cl/</guid>
      <description>Matt Dray (@mattdray)
Example of a Terminal window and commands
 TL;DR These are likely to be your most commonly-used bash commands. These will be useful when you start using the command line for version-control with Git.
  Command Example Short explanation    pwd pwd Print working directory  cd cd &amp;lt;filepath&amp;gt; Change directory  ls ls List folder contents  mkdir mkdir &amp;lt;folder name&amp;gt; Make directory (folder)  touch touch &amp;lt;filename&amp;gt; Create a file  nano nano &amp;lt;filename&amp;gt; Open Nano editor  open open &amp;lt;filename&amp;gt; Open a file in its default program  mv mv &amp;lt;filename&amp;gt; &amp;lt;filepath&amp;gt; Move a file  rm rm &amp;lt;filename&amp;gt; Remove (delete) a file  man man &amp;lt;command name&amp;gt; Manual for a command     New Year’s R-solution People shared recently on Twitter their R goals for 2019 (see Maëlle Salmon’s post).</description>
    </item>
    
    <item>
      <title>Git going: Git</title>
      <link>/2019/01/31/git-going-git/</link>
      <pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/31/git-going-git/</guid>
      <description>Matt Dray (@mattdray)
Setup git init
 Clone from GitHub git clone 
 Add, commit, push git status git status .
git log
git add 
git add .
git reset HEAD~
git diff 
git commit -m “”
git push origin master
 Ignore .gitignore
 Branches git branch -a
git checkout
git push origin 
git pull
 </description>
    </item>
    
    <item>
      <title>Deer-vehicle collisions: a Shiny app</title>
      <link>/2019/01/18/deer-collisions/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/18/deer-collisions/</guid>
      <description>Matt Dray (@mattdray)
Roe deer by Marek Szczepanek, CC BY-SA 4.0
 Open data Deer roam Scotland. So do humans. It’s a problem when they meet at high speed.
The National Deer-Vehicle Collisions Project, administered by The Deer Initiative, has been monitoring data on deer-vehicle collisions in the UK.
The data are open. I found the dataset when skimming through data.gov.uk (a classic weekend activity for all the family). It links to the SNH Natural Spaces site where you can download the data as shapefile, GML or KML under the Open Government Licence.</description>
    </item>
    
    <item>
      <title>Motivate yourself with an .Rprofile</title>
      <link>/2019/01/04/rprofile-motivate/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/04/rprofile-motivate/</guid>
      <description>Matt Dray (@mattdray)
Hang in there, buddy (via Giphy)
 What’s an R profile? It’s a file that contains R code that runs when you start or restart R. You can use it to customise your environment. For example, you could set options, create functions or load packages.
There’s lots of information in the R startup chapter of Colin Gillespie’s’s Efficient R Programming book.
But beware: use of an R profile may not be particularly reproducible if the .</description>
    </item>
    
    <item>
      <title>The NBA Northwest Division with gmapsdistance</title>
      <link>/2018/12/24/nba-travel/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/12/24/nba-travel/</guid>
      <description>Matt Dray (@mattdray)
Classic Jazz: Stockton to Malone for the dunk (via Giphy)
 TL;DR The gmapsdistance R package lets you query the Google Maps API. I used it to look at travel distances between basketball teams. Surprise: they can be far apart even if they’re in the same division.
 The NBA The USA is pretty big.
So the National Basketball Association (NBA) is separated geographically into Eastern and Western conferences, each with three divisions of five teams.</description>
    </item>
    
    <item>
      <title>Blogdown: change Lithium theme font-face</title>
      <link>/2018/11/29/fontface-lithium/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/29/fontface-lithium/</guid>
      <description>Matt Dray (@mattdray)
Lithium by Nirvana (via Giphy)
 Blogdown and Hugo themes You can change the default font face for your Blogdown blog by downloading new ones from Google Fonts and adjusting some CSS.
Sections 2.5.1 and 2.7 of the Blogdown book refer to the ability to change fonts for your site. This post explains how to do it for the Lithium theme – the theme being used on this site.</description>
    </item>
    
    <item>
      <title>Quantify colour with magick</title>
      <link>/2018/11/25/art-of-the-possible/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/25/art-of-the-possible/</guid>
      <description>Matt Dray (@mattdray)
Walrus with rainbow vomit, of course (via Giphy)
 Colour search Lots of online services let you sort images by colour. Some examples:
 Google Arts &amp;amp; Culture Designspiration TinEye Multicolr  These services must have extracted and quantified each image’s colours. There’s probably a simple way of doing this in R, so let’s give it a go.
By ‘simple’ I mean we’re not going to do any hard work or consider any colour theory.</description>
    </item>
    
    <item>
      <title>Waggle dance with ggbeeswarm and emoGG</title>
      <link>/2018/11/21/waggle-dance/</link>
      <pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/21/waggle-dance/</guid>
      <description>Matt Dray (@mattdray)
A bee scene from irreverent 90s Nicktoon ‘Hey Arnold!’ (via Giphy)
 How to plot grouped continuous data? A boxplot lets you show continuous data split by categories, but it hides the data points and doesn’t tell you much about distribution. A violin chart will show the distribution but you still don’t know about the density of data.
Stripcharts show the data for each category as individual points.</description>
    </item>
    
    <item>
      <title>R training featuring Pokemon</title>
      <link>/2018/11/04/r-train-pkmn/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/11/04/r-train-pkmn/</guid>
      <description>Matt Dray (@mattdray)
Psyduck hurt itself in its confusion (via Giphy)
 You teach me and I’ll teach you I recently shared some materials that I made to help some colleagues understand and start to use R Markdown as part of a reproducible workflow.
Well, now I’m sharing another thing I made. It’s called Beginner R and RStudio Training (featuring Pokemon!). It’s an introduction to R, RStudio, R Projects, directory structure and the Tidyverse for beginners… and uses Pokemon Go data that I collected myself.</description>
    </item>
    
    <item>
      <title>R session info info</title>
      <link>/2018/10/13/sessioninfo/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/10/13/sessioninfo/</guid>
      <description>Matt Dray (@mattdray)
US Attorney-General Jeff Sessions-Info (via Giphy)
 What’s session info? Session info is just some details about your working environment like your version of R, the locale it’s running from and any loaded packages.
It gives a snapshot to help people reproduce what you’ve done or spot any anomalies. You might get asked for this if someone is diagnosing your R problem. You may also see it at the end of blog posts or reports.</description>
    </item>
    
    <item>
      <title>Knitting Club: R Markdown for beginners</title>
      <link>/2018/09/24/knitting-club/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/24/knitting-club/</guid>
      <description>Matt Dray (@mattdray)
Knitting simulator by Kara Stone and Gabby DaRienzo (via Giphy)
 RAP and the rise of reproducibility The UK government has got better at producing statistical reports in a reproducible way. A turning point was the creation of Reproducible Analytical Pipelines (RAP) – a method for making releases easier to recreate, test and audit. Matthews Upson and Gregory of Government Digital Service (GDS) have described and enshrined this process and enabled others to continue its spread.</description>
    </item>
    
    <item>
      <title>EARL 2018: Crosstalk in memes</title>
      <link>/2018/09/12/crosstalk-memes/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/12/crosstalk-memes/</guid>
      <description>Matt Dray (@mattdray)
I refuse to let the doge meme die
 EARL 2018 I gave a talk called Crosstalk: Shiny-like without Shiny1 at the EARL 2018 conference in London.
The crosstalk package by Joe Cheng allows HTML widgets – JavaScript visualisations wrapped in R code – to interact with each other. This can be done inside an R Markdown document (including Flexdashboard) for easy server-less sharing in HTML format.</description>
    </item>
    
    <item>
      <title>Engifification in R with gifski</title>
      <link>/2018/07/26/engifification-in-r-with-gifski/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/26/engifification-in-r-with-gifski/</guid>
      <description>Matt Dray (@mattdray)
A sloth. On a pizza slice. In space. (via Giphy)
 gifski::gifski() You and I both know that the world needs more intergalatic-sloth-pizza gifs.
Great news: ‘the fastest gif encoder in the universe’ has been created. The gifski package for R is now in CRAN. It’s a simple yet fast and powerful way to create gifs from within R, built by Jeroen Oom (@opencpu) for ROpenSci.
The obvious application is for creating gifs from plots, as in the following example from the ROpenSci announcement.</description>
    </item>
    
    <item>
      <title>Footballers are younger than you</title>
      <link>/2018/07/17/world-cup-age-app/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/17/world-cup-age-app/</guid>
      <description>Matt Dray (@mattdray)
TL;DR I wrote an R Shiny app that tells you how many players at World Cup 2018 were younger than you. It’s designed to make you feel old. You’re welcome.
Here’s some solid reviews I’ve received so far:
 Very depressing
  I knew I was too old to become a great footballer
  Just what I needed to see
 Thanks folks!
 I was at the World Cup Final Extremely rare and valuable tickets for the (CONIFA) World Cup final</description>
    </item>
    
    <item>
      <title>How accessible is my post about accessibility?</title>
      <link>/2018/07/12/accessible-accessibility/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/12/accessible-accessibility/</guid>
      <description>Matt Dray (@mattdray)
The accessibility empathy lab at the Government Digital Services building
 Digital accessibility I wrote about an accessibility workshop at the recent Sprint 18 conference.
I’ve since been to a more in-depth workshop with Government Digital Service (GDS), who have just launched the latest version of their ‘testing for accessibility’ guidance in the Service Manual and also the GOV.UK Design System, which contains reusable GOV.UK styles, patterns and components with accessibility in mind.</description>
    </item>
    
    <item>
      <title>Markov-chaining my PhD thesis</title>
      <link>/2018/06/30/markov-chain-phd/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/30/markov-chain-phd/</guid>
      <description>Matt Dray (@mattdray)
Design of the invertebrate feeding experiment
 Doc rot I wrote a PhD thesis in 2014 called Effects of multiple environmental stressors on litter chemical composition and decomposition. See my viva presentation slides here if you don’t really like words.
On graduation day, a stranger came up to me and, to paraphrase, said ‘you doctors should be proud of what you’ve achieved, you’re doing a great service’.</description>
    </item>
    
    <item>
      <title>Mail merge in 2018 with R</title>
      <link>/2018/06/26/mail-merge/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/26/mail-merge/</guid>
      <description>Matt Dray (@mattdray)
Super cool 90s guy ready to surf the web (via Giphy)
 Two-thousand and late Clip art! Fax machines! CD-ROMs! Dial-up modems! The World Wide Web! Mail merge!
These exotic terms give me flashbacks to computer class at the turn of the millennium.
I have particularly fond memories of learning to mail merge, which was taught as a way to autocomplete template Word letters for made-up customers in some made-up Access database.</description>
    </item>
    
    <item>
      <title>Tid-ye-text with geniusr</title>
      <link>/2018/06/05/tid-ye-text/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/05/tid-ye-text/</guid>
      <description>Matt Dray
⚠️ Warning: this post contains offensive words. ⚠️
Genius? Kanye West released his latest album – ye – last week1 after a(nother) pretty turbulent and controversial period of his life2. So what’s been on his mind?
I think the real question is why don’t we scrape Yeezus’s lyrics from the web and analyse them using R? Obviously.
 Genius Genius is a website where you can upload and comment on song lyrics.</description>
    </item>
    
    <item>
      <title>Cloudy with a chance of pie</title>
      <link>/2018/05/25/cloud-pie/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/25/cloud-pie/</guid>
      <description>Matt Dray
The pinnacle of visualisation Great news everyone: I’ve taken the best of two stellar data visualisations and smashed them together into something that can only be described as perfection.
Let me set the scene. There’s three things we can agree on:
Everyone loves pie charts, particularly when they’re in 3D, exploded and tilted. Word clouds aren’t at all overused. I have too much time on my hands.  With that in mind, I’ve artfully melded clouds and pies into the function cloud_pie, which I think sounds rather sweet.</description>
    </item>
    
    <item>
      <title>Pokeballs in Super Smash Bros</title>
      <link>/2018/05/19/pokeballs-in-super-smash-bros/</link>
      <pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/19/pokeballs-in-super-smash-bros/</guid>
      <description>Matt Dray
Smash! Super Smash Bros (SSB) is a beat ’em up videogame series featuring characters from various Nintendo franchises and beyond.
The series has featured on Nintendo 64 (Super Smash Bros, 1998), Gamecube (SSB Melee, 2001), Wii (SSB Brawl, 2008), Wii U and 3DS (SSB ‘4’, 2014) and an upcoming title for the Switch console.
The game is popular enough to have resulted in a series of organised tournaments1.</description>
    </item>
    
    <item>
      <title>Accessibility workshop at #Sprint18</title>
      <link>/2018/05/12/accessibility-workshop-at-sprint18/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/12/accessibility-workshop-at-sprint18/</guid>
      <description>Matt Dray
Sprinting Sprint events are a chance for the government digital, data, design and technology community to:
 look back on the work we’ve been doing to transform government and to look forward at what we need to do
 Kevin Cunnington (@kevincunnington), Director General of the Government Digital Service (GDS), outlined this in a recent blog post.
This year’s major themes were transformation, innovation and collaboration. The event was held at the Southbank Centre and Royal Festival Hall in London, with 40 speakers, 19 workshops and over 700 delegates representing 40 departments and agencies.</description>
    </item>
    
    <item>
      <title>TWO DOGS IN TOILET ELDERLY LADY INVOLVED</title>
      <link>/2018/04/27/two-dogs-in-toilet-elderly-lady-involved/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/27/two-dogs-in-toilet-elderly-lady-involved/</guid>
      <description>Matt Dray (@mattdray)
Call the fire brigade. Oh wait, we’re fine.
 TL;DR Animals get stuck in weird places, just ask the London Fire Brigade. I used the sf package for handling some animal rescue spatial data prior to interactive mapping with leaflet. Scroll to the bottom to see the map.
 The problem Sometimes I work with eastings and northings coordinate data.</description>
    </item>
    
    <item>
      <title>R Trek: exploring stardates</title>
      <link>/2018/04/14/r-trek-exploring-stardates/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/14/r-trek-exploring-stardates/</guid>
      <description>Matt Dray
Captain’s log 📖  Star date 71750.51. Our mission is to use R statistical software to extract star dates mentioned in the captain’s log from the scripts of Star Trek: The Next Generation and observe their progression over the course of the show’s seven seasons. There appears to be some mismatch in the frequency of digits after the decimal point – could this indicate poor abillity to choose random numbers?</description>
    </item>
    
  </channel>
</rss>